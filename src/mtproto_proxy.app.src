{application, mtproto_proxy,
 [{description, "An OTP application"},
  {vsn, "0.4.1-mux"},
  {registered, []},
  {mod, { mtproto_proxy_app, []}},
  {applications,
   [lager,
    ranch,
    psq,
    crypto,
    ssl,
    inets,
    kernel,
    stdlib
   ]},
  {env,[
        %% Close connection if it failed to perform handshake in this many seconds
        {init_timeout_sec, 30},
        {hibernate_timeout_sec, 30},
        %% Close connection after this many seconds of inactivity
        {ready_timeout_sec, 60},

        %% Telegram server uses your external IP address as part of encryption
        %% key, so, you should know it.
        %% You can configure IP lookup services by `ip_lookup_services' (should
        %% return my IP address as one line from this URL) or set IP address
        %% statically by `external_ip' (not both).
        %% If both are unset, proxy will try to guess IP address
        %% from getsockname().
        %% `ip_lookup_services' will be tried one-by-one: if 1st is not responding,
        %% 2nd one will be tried and so on
        {ip_lookup_services,
         ["http://mod.ovh/ip/",
          "https://digitalresistance.dog/myIp",
          "http://ipv4.myexternalip.com/raw"]},
        %% {external_ip, "YOUR.SERVER.EXTERNAL.IP"},

        %% Interface to listen for incoming connections
        %% If not set, 0.0.0.0 will be used
        {listen_ip, "0.0.0.0"},
        %% You can add as much as you want. Names and ports should be unique
        {ports, [#{name => mtp_handler,
                   port => 1443,
                   %% You can tell it to listen on specific IP.
                   %% If not set, top-level listen_ip will be used.
                   %% listen_ip => "1.2.3.4",

                   %% secret should be 32 hex chars [0-9a-f]
                   secret => <<"d0d6e111bada5511fcce9584deadbeef">>,
                   %% tag is what you get from @MTProxybot
                   tag => <<"dcbe8f1493fa4cd9ab300891c0b5b326">>}]},
        {num_acceptors, 60},
        {max_connections, 40960},
        %% It's possible to forbid connection from telegram client to proxy
        %% with some of the protocols. Might be useful to set this to
        %% only `{allowed_protocols, [mtp_secure]}` if you want to only allow
        %% connections to this proxy with "dd"-secrets. Connections by other
        %% protocols will be immediately closed.
        {allowed_protocols, [mtp_abridged, mtp_intermediate, mtp_secure]},

        {init_dc_connections, 2},
        {clients_per_dc_connection, 300}

        %% Should be module with function `notify/4' exported.
        %% See mtp_metric:notify/4 for details
        %% {metric_backend, my_metric_backend},

        %% User-space recv socket buffer sizes. Set to higher if you have
        %% enough RAM
        %% {upstream_socket_buffer_size, 51200},   %50kb
        %% {downstream_socket_buffer_size, 512000},   %500kb

        %% Where to fetch telegram proxy configuration
        %% Mostly used to testing
        %% {proxy_secret_url, "https://core.telegram.org/getProxySecret"},
        %% {proxy_config_url, "https://core.telegram.org/getProxyConfig"},

        %% Upstream self-healthchecks tuning
        %% {upstream_healthchecks,
        %%  [{qlen, 300},         % if queue length >X - close connection
        %%   {gc, 409600},        % if connection memory >X - do garbage collection
        %%   {total_mem, 3145728} % if connection memory >X - close connection
        %%  ]},
       ]},
  {modules, []},

  {maintainers, []},
  {licenses, ["Apache 2.0"]},
  {links, []}
 ]}.
